name: CI / Python / Test

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:

      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          # Install a specific version of uv.
          version: "0.4.10"

      - name: Set up Python using .python-version
        id: python
        uses: actions/setup-python@v5.2.0
        with:
          # don't have to supply, would auto resolve to this otherwise
          python-version: .python-version

      - name: Restore uv cache
        id: uv-cache
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install Python dependencies
        if: steps.uv-cache.outputs.cache-hit != 'true'
        run: uv sync --dev --all-extras

      - name: Test with pytest
        run: uv run pytest

      - name: Minimize uv cache
        run: uv cache prune --ci
